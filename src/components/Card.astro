---
interface Props {
  title: string;
  body: string;
  img?: string;
  imgAlt?: string;
  link?: string;
  isService?: boolean;
}

const { title, body, img, imgAlt, link, isService } = Astro.props;
---

<div
  class="card max-w-[300px] w-full flex p-[1px] mx-auto bg-[#FFFFFF] rounded-lg lg:hover:scale-[1.02] md:w-[48%] hover:cursor-pointer"
>
  {
    isService ? (
      <div
        class="pt-3 pb-6 px-2"
        itemscope
        itemtype="https://schema.org/Service"
      >
        <h3
          class="text-black font-semibold text-center text-2xl pb-3"
          itemprop="name"
        >
          {title}
        </h3>

        <hr />

        {img && (
          <img
            src={img}
            alt={imgAlt}
            class="h-40 w-full pt-3"
            itemprop="image"
          />
        )}
        <p class="text-black py-3 mb-4" itemprop="description">
          {body}
        </p>

        {link && (
          <a
            href={link}
            class="bg-blue-400 text-white px-2 py-3 font-semibold rounded-2xl"
            itemprop="url"
          >
            Learn More
          </a>
        )}
      </div>
    ) : (
      <div class="pt-3 pb-6 px-2" itemscope itemtype="https://schema.org/Thing">
        <h3
          class="text-black font-semibold text-center text-2xl pb-3"
          itemprop="name"
        >
          {title}
        </h3>
        <hr />
        {img && (
          <img
            src={img}
            alt={imgAlt}
            class="h-40 w-full pt-3"
            itemprop="image"
          />
        )}
        <p class="text-black py-3 mb-4" itemprop="description">
          {body}
        </p>

        {link && (
          <a
            href={link}
            class="bg-blue-400 text-white px-2 py-3 font-semibold rounded-2xl"
            itemprop="url"
          >
            Learn More
          </a>
        )}
      </div>
    )
  }
</div>

<style>
  hr {
    border: 1px solid #8d8d8d;
    width: 90%;
    margin: 0 auto;
  }

  .card {
    background-image: none;
    background-size: 400%;
    background-position: 100%;
    transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
    box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);
    transition: all 0.3s ease-in-out;
  }

  .card:is(:hover, :focus-within) hr {
    border-color: #c19a6b;
  }
  .card:is(:hover, :focus-within) {
    background-position: 0;
    background-image: var(--accent-gunmetal-gradient);
  }
  .card:is(:hover, :focus-within) h3 {
    color: #fff;
  }

  .card:is(:hover, :focus-within) div p {
    color: #fff;
  }
</style>
